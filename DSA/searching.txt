Searching
Given sequence: 6 4 1 9 5 8 3 7 2
----------------------
---Linear searching---
----------------------
let's find for 9
6 4 1 9 5 8 3 7 2 
_ _ _ _ _ _ _ _ _
0 1 2 3 4 5 6 7 8
successful, item fond at index 3

let's searching for 10
unsuccessful, item not found

Time complexity: 
	Best Case: O(1)
	Worst Case: O(n)

-------------------
---Binary Search---
-------------------
let's find for 9
sort the sequence first
1 2 3 4 5 6 7 8 9
_ _ _ _ _ _ _ _ _
0 1 2 3 4 5 6 7 8
l = 0
u = 8
mid = floor[( l + u ) / 2] = 4
value of mid = 5
1 2 3 4 [ 5 ] 6 7 8 9
As [mid] < item(9)
left part of the array is removed
will be work on the right part
6 7 8 9
_ _ _ _
5 6 7 8
l = mid + 1 = 4 + 1 = 5
u = 8
mid = floor[( l + u ) / 2] = ( 5 + 8 ) / 2 = 6.5 = 6
value of mid = 7
6 [ 7 ] 8 9
As [mid] < item(9)
left part of the array is removed
will be work on the right part
l = mid + 1 = 6 + 1 = 7
u = 8
mid = floor[( l + u ) / 2] = ( 7 + 8 ) / 2 = 7.5 = 7
value of mid = 8
As [mid] < item(9)
left part of the array is removed
will be work on the right part
[ 8 ] 9
l = mid + 1 = 7 + 1 = 8
u = 8
mid = floor[( l + u ) / 2] = ( 8 + 8 ) / 2 = 8
As [mid] = item(9)
successful, item fond at index 8

let's searching for 10
unsuccessful, item not found

Time complexity: 
	Best Case: O(1)
	Worst Case: O(log n)



 
