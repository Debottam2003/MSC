Coupling and Cohesion
Cohesion, refers to how closely related and focused the responsibilities
of a single module or class are.High Cohesion means a class or module performs
a single task or a group of related tasks, which makes the system easier to maintain and understand.

Coupling, refers to the degree of direct knowledge one class has about another.
Low coupling is preferred as it means changes in one module are less likely to affect others,
prompting independence and easier maintainance.

Modularity and Hierarchy

    Modularity is about dividing a system into distinct modules or components, 
    each responsible for a specific aspect of the system's functionality. 
    This helps in managing complexity and enhances reusability and maintainability.

    Hierarchy involves organizing modules or classes into layers where higher-level 
    classes use lower-level classes. Common forms of hierarchy in OOP include inheritance 
    hierarchies where classes are arranged in parent-child relationships.

Garbage Collection: 
        In coding the process of automatically identifying and 
        freeing up memory that is no longer in use by a program.It's crucial
        aspect of memory management, helping prevent memory leaks
        (where unused memory is not released) and improving overall performance.

        Garbage collection primarily deals with dynamic memory allocation, 
        where memory is allocated at runtime. When objects or data are created, 
        memory is allocated. Once theyâ€™re no longer needed, garbage collection 
        identifies them and reclaims their memory.